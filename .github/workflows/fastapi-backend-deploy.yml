---
name: Deploy fastapi-services
on:
  push:
    branches:
      - main
    paths:
      - src/backend/fastapi-server/**
  workflow_dispatch: null
jobs:
  Dockerizing_Fastapi_Backend_Api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          cd src/backend/fastapi-server
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: >
          cd src/backend/fastapi-server

          # stop the build if there are Python syntax errors or undefined names

          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide

          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      
      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.ACR_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }} 
        run: |
          cd src/backend/fastapi-server
          docker login $REGISTRY_LOGIN_SERVER --username $DOCKER_USER --password $DOCKER_PASSWORD
          docker buildx build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/tastebuddiesbackend:${{ github.sha }} -f prod.dockerfile .
          
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/tastebuddiesbackend:${{ github.sha }}
          cd ../../../
  
  Deploy_Fastapi-Backend_Api:
    runs-on: ubuntu-latest
    needs:
      - Dockerizing_Fastapi_Backend_Api
    if: success('Dockerizing_Fastapi_Backend_Api')
    steps:
      - uses: actions/checkout@v2
      - name: Replace vals
        env:
          spoonacular: ${{ secrets.FOODAPIKEY }}
          mongodb: ${{ secrets.MONGOURI }}
          jwt: ${{ secrets.JWTSECRET }}
          cusines: ${{ secrets.CUSINES }}
          sha: ${{ github.sha }}
        run: |
          export LATEST_SHA_IMAGE=$sha export FILLER_CUSINES=$cusines export FILLER_JWTSECRET=$jwt export FILLER_MONGODBURI=$mongodb export FILLER_FOODKEY=$spoonacular
          envsubst '$LATEST_SHA_IMAGE,$FILLER_CUSINES,$FILLER_JWT,$FILLER_MONGODBURI,$FILLER_FOODKEY' < src/infra/aks/manifest/fastapi-server/manifests.yml > src/infra/aks/manifest/fastapi-server/new-manifest.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
      - uses: actions-hub/kubectl@master
        with:
          args: apply -f src/infra/aks/manifest/fastapi-server/new-manifest.yaml
